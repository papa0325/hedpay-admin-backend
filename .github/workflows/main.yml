name: Node-CI

on:
  push:
    branches: [develop, master]

jobs:
  build:
    runs-on: ubuntu-18.04
    if: contains(github.event.head_commit.message, '[update]')

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install npm dependencies
        run: npm install

      - name: Run build task
        run: npm run build

  deploy-develop:
    runs-on: ubuntu-18.04
    needs: [build]
    if: github.ref == 'refs/heads/develop' && contains(github.event.head_commit.message, '[update]')

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Environment preparation
        run: |
          mkdir -p ~/.ssh/
          touch ~/.ssh/id_rsa
          chmod -R go= ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SERVER_SSH_KEY }}" >> ~/.ssh/id_rsa          
          sudo apt-add-repository -y -u ppa:ansible/ansible          
          sudo apt-get install -y rsync
          sudo apt-get install -y ansible

      - name: Deploy to Server
        run: |
          chmod 700 .ci-scripts
          cd .ci-scripts          
          ansible-playbook -i "${{ secrets.REMOTE_HOST }}" -e "ansible_user=${{ secrets.REMOTE_USER }} \
            DB_LINK=${{ secrets.DB_LINK_DEVELOP }} \
            REMOTE_TARGET=${{ secrets.REMOTE_TARGET_DEVELOP }} \
            PROCESS_NAME=${{ secrets.PROCESS_NAME_DEVELOP }} \
            BACKEND_URL=${{ secrets.BACKEND_URL_DEVELOP }} \
            BACKEND_USERNAME=${{ secrets.BACKEND_USERNAME_DEVELOP }} \
            BACKEND_PASSWORD=${{ secrets.BACKEND_PASSWORD_DEVELOP }} \
            BACKEND_THIS_USERNAME=${{ secrets.BACKEND_THIS_USERNAME_DEVELOP }} \
            BACKEND_THIS_PASSWORD=${{ secrets.BACKEND_THIS_PASSWORD_DEVELOP }} \
            JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }} \
            JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} \
            SERVER_HOST=${{ secrets.SERVER_HOST }} \
            SERVER_PORT=${{ secrets.SERVER_PORT_DEVELOP }} \
            EMAIL_HOST=${{ secrets.EMAIL_HOST }} \
            EMAIL_PORT=${{ secrets.EMAIL_PORT }} \
            EMAIL_USER=${{ secrets.EMAIL_USER }} \
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} \
            BASE_URL=${{ secrets.BASE_URL }} \
            SRC_DIR=${{ github.workspace }}/" backend-update.yml;

  deploy-master:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, '[update]')

    steps:
      - name: Copy code files to container
        uses: actions/checkout@v2

      - name: Environment preparation
        run: |
          mkdir -p ~/.ssh/
          touch ~/.ssh/id_rsa
          chmod -R go= ~/.ssh
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SERVER_SSH_KEY }}" >> ~/.ssh/id_rsa          
          sudo apt-add-repository -y -u ppa:ansible/ansible          
          sudo apt-get install -y rsync
          sudo apt-get install -y ansible

      - name: Deploy to Server
        run: |
          chmod 700 .ci-scripts
          cd .ci-scripts
          ansible-playbook -i "${{ secrets.REMOTE_HOST }}" -e "ansible_user=${{ secrets.REMOTE_USER }} \
            DB_LINK=${{ secrets.DB_LINK_MASTER }} \
            REMOTE_TARGET=${{ secrets.REMOTE_TARGET_MASTER }} \
            PROCESS_NAME=${{ secrets.PROCESS_NAME_MASTER }} \
            BACKEND_URL=${{ secrets.BACKEND_URL_MASTER }} \
            BACKEND_USERNAME=${{ secrets.BACKEND_USERNAME_MASTER }} \
            BACKEND_PASSWORD=${{ secrets.BACKEND_PASSWORD_MASTER }} \
            BACKEND_THIS_USERNAME=${{ secrets.BACKEND_THIS_USERNAME_MASTER }} \
            BACKEND_THIS_PASSWORD=${{ secrets.BACKEND_THIS_PASSWORD_MASTER }} \
            JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }} \
            JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} \
            SERVER_HOST=${{ secrets.SERVER_HOST }} \
            SERVER_PORT=${{ secrets.SERVER_PORT_MASTER }} \      
            EMAIL_HOST=${{ secrets.EMAIL_HOST }} \
            EMAIL_PORT=${{ secrets.EMAIL_PORT }} \
            EMAIL_USER=${{ secrets.EMAIL_USER }} \
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} \      
            BASE_URL=${{ secrets.BASE_URL_MASTER }} \
            SRC_DIR=${{ github.workspace }}/" backend-update.yml;
